@page "/"
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NoteState NoteState

<div class="px-1">
    <div><h3>Login</h3></div>
    <div class=" mw-500px">
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">Email address</label>
                <InputText @bind-Value="loginModel.Username" class="form-control" placeholder="Enter email" />
                <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
            </div>
            <div class="mb-3">
                <label for="exampleInputPassword1" class="form-label">Password</label>
                <InputText @bind-Value="loginModel.Password" class="form-control" placeholder="Password" type="password" />
            </div>
            <div class="mb-3 form-check">
                <input type="checkbox" class="form-check-input" id="exampleCheck1">
                <div id="passwordHelpBlock" class="form-text">
                    Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>

        </EditForm>
    </div>
</div>



@code {

    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var idToken = await AuthService.SignInAsync(loginModel.Username, loginModel.Password); // get access token from AuthService SignIn METHO
        if (!string.IsNullOrEmpty(idToken))
        {
            // Store token securely and navigate to the app's main page
            await localStorage.SetItemAsync("id_token", idToken);
            NoteState.username = loginModel.Username;
            Navigation.NavigateTo("/home");
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}